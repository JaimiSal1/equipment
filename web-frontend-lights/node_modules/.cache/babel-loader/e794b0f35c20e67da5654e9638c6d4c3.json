{"ast":null,"code":"var _jsxFileName = \"/home/artagan/Desktop/equipment/web-frontend/src/components/ListControls/ListControls.tsx\";\nimport React from 'react';\nimport './ListControls.css';\nexport default function ListControls({\n  data,\n  dispatch,\n  server\n}) {\n  let {\n    id,\n    name,\n    lists\n  } = data;\n  let list_ids = lists.map(x => x.id);\n  let free_id = 0;\n\n  while (list_ids.indexOf(free_id) !== -1) {\n    free_id++;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list_controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Cue List (\", id + 1, \"/\", lists.length, \"):\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    value: id,\n    onChange: e => change_list(parseInt(e.target.value), dispatch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, lists.map(x => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: x.id,\n      value: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }\n    }, x.name);\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: free_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Add new...\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rename_list(id, name, server),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Rename\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => remove_list(id, name, list_ids, server, dispatch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Delete\"));\n}\n\nfunction change_list(list_id, dispatch) {\n  console.log(list_id);\n  dispatch({\n    type: 'switch_list',\n    id: list_id\n  });\n}\n\nfunction rename_list(list_id, old_name, server) {\n  let name = prompt(`Please enter a new name for this cue list (current is \"${old_name}\")`);\n\n  if (name !== null) {\n    server.rename_list(list_id, name);\n  }\n}\n\nfunction remove_list(list_id, name, list_ids, server, dispatch) {\n  let confirmation = window.confirm(`Are you sure you want to delete all the cues in \"${name}\"? This cannot be undone.`);\n\n  if (confirmation === true) {\n    server.delete_list(list_id);\n    dispatch({\n      type: 'switch_list',\n      id: 0\n    });\n  }\n}","map":{"version":3,"sources":["/home/artagan/Desktop/equipment/web-frontend/src/components/ListControls/ListControls.tsx"],"names":["React","ListControls","data","dispatch","server","id","name","lists","list_ids","map","x","free_id","indexOf","length","e","change_list","parseInt","target","value","rename_list","remove_list","list_id","console","log","type","old_name","prompt","confirmation","window","confirm","delete_list"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,OAAO,oBAAP;AAgBA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAtB,EAAkE;AAC/E,MAAI;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA;AAAX,MAAoBL,IAAxB;AACA,MAAIM,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACL,EAAjB,CAAf;AACA,MAAIM,OAAO,GAAG,CAAd;;AACA,SAAOH,QAAQ,CAACI,OAAT,CAAiBD,OAAjB,MAA8B,CAAC,CAAtC,EAAyC;AACvCA,IAAAA,OAAO;AACR;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaN,EAAE,GAAG,CADlB,OACsBE,KAAK,CAACM,MAD5B,6BAEE;AAAQ,IAAA,KAAK,EAAER,EAAf;AAAmB,IAAA,QAAQ,EAAGS,CAAD,IAAOC,WAAW,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT,EAA2Bf,QAA3B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEII,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAI;AACb,wBAAO;AAAQ,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAf;AAAmB,MAAA,KAAK,EAAEK,CAAC,CAACL,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCK,CAAC,CAACJ,IAAnC,CAAP;AACD,GAFD,CAFJ,eAME;AAAQ,IAAA,KAAK,EAAEK,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CAFF,eAUE;AAAQ,IAAA,OAAO,EAAE,MAAMQ,WAAW,CAACd,EAAD,EAAKC,IAAL,EAAWF,MAAX,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAQ,IAAA,OAAO,EAAE,MAAMgB,WAAW,CAACf,EAAD,EAAKC,IAAL,EAAWE,QAAX,EAAqBJ,MAArB,EAA6BD,QAA7B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAeD;;AAED,SAASY,WAAT,CAAqBM,OAArB,EAAsClB,QAAtC,EAAkE;AAChEmB,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAlB,EAAAA,QAAQ,CAAC;AAACqB,IAAAA,IAAI,EAAE,aAAP;AAAsBnB,IAAAA,EAAE,EAAEgB;AAA1B,GAAD,CAAR;AACD;;AAED,SAASF,WAAT,CAAqBE,OAArB,EAAsCI,QAAtC,EAAwDrB,MAAxD,EAAwE;AACtE,MAAIE,IAAI,GAAGoB,MAAM,CAAE,0DAAyDD,QAAS,IAApE,CAAjB;;AACA,MAAInB,IAAI,KAAK,IAAb,EAAmB;AACjBF,IAAAA,MAAM,CAACe,WAAP,CAAmBE,OAAnB,EAA4Bf,IAA5B;AACD;AACF;;AAED,SAASc,WAAT,CAAqBC,OAArB,EAAsCf,IAAtC,EAAoDE,QAApD,EAAwEJ,MAAxE,EAAwFD,QAAxF,EAAoH;AAClH,MAAIwB,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAgB,oDAAmDvB,IAAK,2BAAxE,CAAnB;;AACA,MAAIqB,YAAY,KAAK,IAArB,EAA2B;AACzBvB,IAAAA,MAAM,CAAC0B,WAAP,CAAmBT,OAAnB;AACAlB,IAAAA,QAAQ,CAAC;AAACqB,MAAAA,IAAI,EAAE,aAAP;AAAsBnB,MAAAA,EAAE,EAAE;AAA1B,KAAD,CAAR;AACD;AACF","sourcesContent":["import React, {Dispatch} from 'react';\nimport './ListControls.css';\nimport Server from '../../server';\nimport Action, {CueList} from '../../action';\n\nexport type ListData = {\n  id: number,\n  name: string,\n  lists: CueList[]\n};\n\ntype ListControlProps = {\n  data: ListData;\n  dispatch: Dispatch<Action>;\n  server: Server;\n}\n\nexport default function ListControls({data, dispatch, server}: ListControlProps) {\n  let {id, name, lists} = data;\n  let list_ids = lists.map(x => x.id);\n  let free_id = 0;\n  while (list_ids.indexOf(free_id) !== -1) {\n    free_id++;\n  }\n  return (\n    <div className=\"list_controls\">\n      Cue List ({id + 1}/{lists.length}):&nbsp;&nbsp;\n      <select value={id} onChange={(e) => change_list(parseInt(e.target.value), dispatch)}>\n        {\n          lists.map(x => {\n            return <option key={x.id} value={x.id}>{x.name}</option>\n          })\n        }\n        <option value={free_id}>Add new...</option>\n      </select>\n      <button onClick={() => rename_list(id, name, server)}>Rename</button>\n      <button onClick={() => remove_list(id, name, list_ids, server, dispatch)}>Delete</button>\n    </div>\n  );\n}\n\nfunction change_list(list_id: number, dispatch: Dispatch<Action>) {\n  console.log(list_id);\n  dispatch({type: 'switch_list', id: list_id});\n}\n\nfunction rename_list(list_id: number, old_name: string, server: Server) {\n  let name = prompt(`Please enter a new name for this cue list (current is \"${old_name}\")`)\n  if (name !== null) {\n    server.rename_list(list_id, name);\n  }\n}\n\nfunction remove_list(list_id: number, name: string, list_ids: number[], server: Server, dispatch: Dispatch<Action>) {\n  let confirmation = window.confirm(`Are you sure you want to delete all the cues in \"${name}\"? This cannot be undone.`);\n  if (confirmation === true) {\n    server.delete_list(list_id);\n    dispatch({type: 'switch_list', id: 0});\n  }\n}\n"]},"metadata":{},"sourceType":"module"}