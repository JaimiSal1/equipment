{"ast":null,"code":"// import WebMidi from 'webmidi';\nexport default class Controller {\n  constructor(state, dispatch, server) {\n    this.server = void 0;\n    this.dispatch = void 0;\n    this.input = void 0;\n    this.timeouts = void 0;\n    this.pending_recording = void 0;\n    this.last_state = void 0;\n    this.last_state = state;\n    this.dispatch = dispatch;\n    this.server = server;\n    this.connect();\n    this.timeouts = new Map();\n    this.pending_recording = false;\n  }\n\n  connect() {\n    if (!navigator.requestMIDIAccess) {\n      console.log('WebMidi is not supported');\n      return;\n    }\n\n    console.log('WebMidi enabled');\n    navigator.requestMIDIAccess({\n      sysex: true\n    }).then(a => this.onaccess(a), () => this.onfailure());\n  }\n\n  onaccess(access) {\n    let inputs = access.inputs;\n\n    if (inputs.size === 0) {\n      console.log('No MIDI devices detected.');\n    }\n\n    for (let entry of inputs.entries()) {\n      let input = entry[1];\n      if (!input.manufacturer) continue;\n      this.input = input;\n\n      input.onmidimessage = m => this.onmessage(m);\n\n      return;\n    }\n  }\n\n  onfailure() {\n    console.log('WebMidi access denied');\n  }\n\n  onmessage(message) {\n    let channel = message.data[1];\n    let value = message.data[2] * 2;\n\n    if (channel > 8) {\n      if (value === 0) {\n        return;\n      }\n\n      if (this.pending_recording) {\n        if (channel === 45 || channel === 60) {\n          // record + record or record + marker set\n          this.server.save_cue(this.last_state.cue.current, this.last_state.cue.fade_time);\n        } else if (channel === 61) {\n          // record + marker left\n          this.server.save_cue(this.last_state.cue.current - 1, this.last_state.cue.fade_time);\n        } else if (channel === 62) {\n          // record + marker right\n          this.server.save_cue(this.last_state.cue.current + 1, this.last_state.cue.fade_time);\n        }\n\n        this.pending_recording = false;\n      } else {\n        if (channel === 41 || channel === 44) {\n          // play or forward\n          this.server.go();\n        }\n\n        if (channel === 42 || channel === 43) {\n          // stop or back\n          this.server.back();\n        }\n\n        if (channel === 45) {\n          // record\n          this.pending_recording = true;\n        }\n\n        if (channel >= 64 && channel <= 71) {\n          // R buttons\n          this.server.reset_channel(channel - 64);\n        }\n      }\n\n      return;\n    } // this.dispatch({type: 'update_channel', value: {channel: channel, value: value, status: 'manual'}});\n\n\n    if (this.timeouts.has(channel)) {\n      clearTimeout(this.timeouts.get(channel));\n    }\n\n    this.timeouts.set(channel, window.setTimeout(() => this.ontimeout(channel, value), 1));\n  }\n\n  ontimeout(channel, value) {\n    this.server.set_level(channel, value);\n    this.timeouts.delete(channel);\n  }\n\n  update_state(state) {\n    this.last_state = state;\n  }\n\n}","map":{"version":3,"sources":["/home/artagan/Desktop/equipment/web-frontend/src/controller.ts"],"names":["Controller","constructor","state","dispatch","server","input","timeouts","pending_recording","last_state","connect","Map","navigator","requestMIDIAccess","console","log","sysex","then","a","onaccess","onfailure","access","inputs","size","entry","entries","manufacturer","onmidimessage","m","onmessage","message","channel","data","value","save_cue","cue","current","fade_time","go","back","reset_channel","has","clearTimeout","get","set","window","setTimeout","ontimeout","set_level","delete","update_state"],"mappings":"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","sourcesContent":["import {Dispatch} from 'react';\nimport Action from './action';\nimport Server from './server';\nimport {AppState} from './components/App/App';\n// import WebMidi from 'webmidi';\n\nexport default class Controller {\n  server: Server;\n  dispatch: Dispatch<Action>;\n  input?: WebMidi.MIDIInput;\n  timeouts: Map<number, number>;\n  pending_recording: boolean;\n  last_state: AppState;\n\n  constructor(state: AppState, dispatch: Dispatch<Action>, server: Server) {\n    this.last_state = state;\n    this.dispatch = dispatch;\n    this.server = server;\n    this.connect();\n    this.timeouts = new Map();\n    this.pending_recording = false;\n  }\n\n  private connect() {\n    if (!navigator.requestMIDIAccess) {\n      console.log('WebMidi is not supported');\n      return;\n    }\n    console.log('WebMidi enabled');\n    navigator.requestMIDIAccess({sysex: true}).then((a) => this.onaccess(a), () => this.onfailure());\n  }\n\n  private onaccess(access: WebMidi.MIDIAccess) {\n    let inputs = access.inputs;\n    if (inputs.size === 0) {\n      console.log('No MIDI devices detected.');\n    }\n    for (let entry of inputs.entries()) {\n      let input = entry[1];\n      if (!input.manufacturer) continue;\n      this.input = input;\n      input.onmidimessage = (m: WebMidi.MIDIMessageEvent) => this.onmessage(m);\n      return;\n    }\n  }\n\n  private onfailure() {\n    console.log('WebMidi access denied');\n  }\n\n  private onmessage(message: WebMidi.MIDIMessageEvent) {\n    let channel = message.data[1];\n    let value = message.data[2]*2;\n    if (channel > 8) {\n      if (value === 0) {\n        return;\n      }\n      if (this.pending_recording) {\n        if (channel === 45 || channel === 60) {\n          // record + record or record + marker set\n          this.server.save_cue(this.last_state.cue.current, this.last_state.cue.fade_time);\n        } else if (channel === 61) {\n          // record + marker left\n          this.server.save_cue(this.last_state.cue.current - 1, this.last_state.cue.fade_time);\n        } else if (channel === 62) {\n          // record + marker right\n          this.server.save_cue(this.last_state.cue.current + 1, this.last_state.cue.fade_time);\n        }\n        this.pending_recording = false;\n      } else {\n        if (channel === 41 || channel === 44) {\n          // play or forward\n          this.server.go();\n        }\n        if (channel === 42 || channel === 43) {\n          // stop or back\n          this.server.back();\n        }\n        if (channel === 45) {\n          // record\n          this.pending_recording = true;\n        }\n        if (channel >= 64 && channel <= 71) {\n          // R buttons\n          this.server.reset_channel(channel - 64);\n        }\n      }\n      return;\n    }\n    // this.dispatch({type: 'update_channel', value: {channel: channel, value: value, status: 'manual'}});\n    if (this.timeouts.has(channel)) {\n      clearTimeout(this.timeouts.get(channel));\n    }\n    this.timeouts.set(channel,\n      window.setTimeout(() => this.ontimeout(channel, value), 1)\n    );\n  }\n\n  private ontimeout(channel: number, value: number) {\n    this.server.set_level(channel, value);\n    this.timeouts.delete(channel);\n  }\n\n  public update_state(state: AppState) {\n    this.last_state = state;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}