{"ast":null,"code":"import React from'react';import'./ListControls.css';export default function ListControls(_ref){var data=_ref.data,dispatch=_ref.dispatch,server=_ref.server;var id=data.id,name=data.name,lists=data.lists;var list_ids=lists.map(function(x){return x.id;});var free_id=0;while(list_ids.indexOf(free_id)!==-1){free_id++;}return/*#__PURE__*/React.createElement(\"div\",{className:\"list_controls\"},\"Cue List (\",id+1,\"/\",lists.length,\"):\\xA0\\xA0\",/*#__PURE__*/React.createElement(\"select\",{value:id,onChange:function onChange(e){return change_list(parseInt(e.target.value),dispatch);}},lists.map(function(x){return/*#__PURE__*/React.createElement(\"option\",{key:x.id,value:x.id},x.name);}),/*#__PURE__*/React.createElement(\"option\",{value:free_id},\"Add new...\")),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return rename_list(id,name,server);}},\"Rename\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return remove_list(id,name,list_ids,server,dispatch);}},\"Delete\"));}function change_list(list_id,dispatch){console.log(list_id);dispatch({type:'switch_list',id:list_id});}function rename_list(list_id,old_name,server){var name=prompt(\"Please enter a new name for this cue list (current is \\\"\".concat(old_name,\"\\\")\"));if(name!==null){server.rename_list(list_id,name);}}function remove_list(list_id,name,list_ids,server,dispatch){var confirmation=window.confirm(\"Are you sure you want to delete all the cues in \\\"\".concat(name,\"\\\"? This cannot be undone.\"));if(confirmation===true){server.delete_list(list_id);dispatch({type:'switch_list',id:0});}}","map":{"version":3,"sources":["/home/artagan/Desktop/equipment/web-frontend/src/components/ListControls/ListControls.tsx"],"names":["React","ListControls","data","dispatch","server","id","name","lists","list_ids","map","x","free_id","indexOf","length","e","change_list","parseInt","target","value","rename_list","remove_list","list_id","console","log","type","old_name","prompt","confirmation","window","confirm","delete_list"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAA8B,OAA9B,CACA,MAAO,oBAAP,CAgBA,cAAe,SAASC,CAAAA,YAAT,MAAkE,IAA3CC,CAAAA,IAA2C,MAA3CA,IAA2C,CAArCC,QAAqC,MAArCA,QAAqC,CAA3BC,MAA2B,MAA3BA,MAA2B,IAC1EC,CAAAA,EAD0E,CACvDH,IADuD,CAC1EG,EAD0E,CACtEC,IADsE,CACvDJ,IADuD,CACtEI,IADsE,CAChEC,KADgE,CACvDL,IADuD,CAChEK,KADgE,CAE/E,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,GAAN,CAAU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACL,EAAN,EAAX,CAAf,CACA,GAAIM,CAAAA,OAAO,CAAG,CAAd,CACA,MAAOH,QAAQ,CAACI,OAAT,CAAiBD,OAAjB,IAA8B,CAAC,CAAtC,CAAyC,CACvCA,OAAO,GACR,CACD,mBACE,2BAAK,SAAS,CAAC,eAAf,eACaN,EAAE,CAAG,CADlB,KACsBE,KAAK,CAACM,MAD5B,2BAEE,8BAAQ,KAAK,CAAER,EAAf,CAAmB,QAAQ,CAAE,kBAACS,CAAD,QAAOC,CAAAA,WAAW,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT,CAA2Bf,QAA3B,CAAlB,EAA7B,EAEII,KAAK,CAACE,GAAN,CAAU,SAAAC,CAAC,CAAI,CACb,mBAAO,8BAAQ,GAAG,CAAEA,CAAC,CAACL,EAAf,CAAmB,KAAK,CAAEK,CAAC,CAACL,EAA5B,EAAiCK,CAAC,CAACJ,IAAnC,CAAP,CACD,CAFD,CAFJ,cAME,8BAAQ,KAAK,CAAEK,OAAf,eANF,CAFF,cAUE,8BAAQ,OAAO,CAAE,yBAAMQ,CAAAA,WAAW,CAACd,EAAD,CAAKC,IAAL,CAAWF,MAAX,CAAjB,EAAjB,WAVF,cAWE,8BAAQ,OAAO,CAAE,yBAAMgB,CAAAA,WAAW,CAACf,EAAD,CAAKC,IAAL,CAAWE,QAAX,CAAqBJ,MAArB,CAA6BD,QAA7B,CAAjB,EAAjB,WAXF,CADF,CAeD,CAED,QAASY,CAAAA,WAAT,CAAqBM,OAArB,CAAsClB,QAAtC,CAAkE,CAChEmB,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACAlB,QAAQ,CAAC,CAACqB,IAAI,CAAE,aAAP,CAAsBnB,EAAE,CAAEgB,OAA1B,CAAD,CAAR,CACD,CAED,QAASF,CAAAA,WAAT,CAAqBE,OAArB,CAAsCI,QAAtC,CAAwDrB,MAAxD,CAAwE,CACtE,GAAIE,CAAAA,IAAI,CAAGoB,MAAM,mEAA2DD,QAA3D,QAAjB,CACA,GAAInB,IAAI,GAAK,IAAb,CAAmB,CACjBF,MAAM,CAACe,WAAP,CAAmBE,OAAnB,CAA4Bf,IAA5B,EACD,CACF,CAED,QAASc,CAAAA,WAAT,CAAqBC,OAArB,CAAsCf,IAAtC,CAAoDE,QAApD,CAAwEJ,MAAxE,CAAwFD,QAAxF,CAAoH,CAClH,GAAIwB,CAAAA,YAAY,CAAGC,MAAM,CAACC,OAAP,6DAAmEvB,IAAnE,+BAAnB,CACA,GAAIqB,YAAY,GAAK,IAArB,CAA2B,CACzBvB,MAAM,CAAC0B,WAAP,CAAmBT,OAAnB,EACAlB,QAAQ,CAAC,CAACqB,IAAI,CAAE,aAAP,CAAsBnB,EAAE,CAAE,CAA1B,CAAD,CAAR,CACD,CACF","sourcesContent":["import React, {Dispatch} from 'react';\nimport './ListControls.css';\nimport Server from '../../server';\nimport Action, {CueList} from '../../action';\n\nexport type ListData = {\n  id: number,\n  name: string,\n  lists: CueList[]\n};\n\ntype ListControlProps = {\n  data: ListData;\n  dispatch: Dispatch<Action>;\n  server: Server;\n}\n\nexport default function ListControls({data, dispatch, server}: ListControlProps) {\n  let {id, name, lists} = data;\n  let list_ids = lists.map(x => x.id);\n  let free_id = 0;\n  while (list_ids.indexOf(free_id) !== -1) {\n    free_id++;\n  }\n  return (\n    <div className=\"list_controls\">\n      Cue List ({id + 1}/{lists.length}):&nbsp;&nbsp;\n      <select value={id} onChange={(e) => change_list(parseInt(e.target.value), dispatch)}>\n        {\n          lists.map(x => {\n            return <option key={x.id} value={x.id}>{x.name}</option>\n          })\n        }\n        <option value={free_id}>Add new...</option>\n      </select>\n      <button onClick={() => rename_list(id, name, server)}>Rename</button>\n      <button onClick={() => remove_list(id, name, list_ids, server, dispatch)}>Delete</button>\n    </div>\n  );\n}\n\nfunction change_list(list_id: number, dispatch: Dispatch<Action>) {\n  console.log(list_id);\n  dispatch({type: 'switch_list', id: list_id});\n}\n\nfunction rename_list(list_id: number, old_name: string, server: Server) {\n  let name = prompt(`Please enter a new name for this cue list (current is \"${old_name}\")`)\n  if (name !== null) {\n    server.rename_list(list_id, name);\n  }\n}\n\nfunction remove_list(list_id: number, name: string, list_ids: number[], server: Server, dispatch: Dispatch<Action>) {\n  let confirmation = window.confirm(`Are you sure you want to delete all the cues in \"${name}\"? This cannot be undone.`);\n  if (confirmation === true) {\n    server.delete_list(list_id);\n    dispatch({type: 'switch_list', id: 0});\n  }\n}\n"]},"metadata":{},"sourceType":"module"}